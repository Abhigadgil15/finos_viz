{"version":3,"sources":["../../../src/js/tooltip/selectionData.js"],"names":["get_type_config","toValue","type","value","Date","parseInt","toLocaleString","format","parseFloat","getGroupValues","data","settings","crossValues","length","groupValues","crossValue","split","key","map","cross","i","name","getSplitValues","splitValues","mainValue","getDataValues","mainValues","baseValue","main","colorValue"],"mappings":"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","sourcesContent":["/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\nimport {get_type_config} from \"@finos/perspective/dist/esm/config\";\n\nexport function toValue(type, value) {\n    switch (type) {\n        case \"date\":\n        case \"datetime\":\n            return value instanceof Date ? value : new Date(parseInt(value)).toLocaleString(\"en-us\", get_type_config(type).format);\n        case \"integer\":\n            return parseInt(value, 10);\n        case \"float\":\n            return parseFloat(value);\n    }\n    return value;\n}\n\nexport function getGroupValues(data, settings) {\n    if (settings.crossValues.length === 0) return [];\n    const groupValues = (data.crossValue.split ? data.crossValue.split(\"|\") : [data.crossValue]) || [data.key];\n    return groupValues.map((cross, i) => ({\n        name: settings.crossValues[i].name,\n        value: toValue(settings.crossValues[i].type, cross)\n    }));\n}\n\nexport function getSplitValues(data, settings) {\n    if (settings.splitValues.length === 0) return [];\n    const splitValues = data.key ? data.key.split(\"|\") : data.mainValue.split ? data.mainValue.split(\"|\") : [data.mainValue];\n    return settings.splitValues.map((split, i) => ({\n        name: split.name,\n        value: toValue(split.type, splitValues[i])\n    }));\n}\n\nexport function getDataValues(data, settings) {\n    if (settings.mainValues.length > 1) {\n        if (data.mainValue) {\n            return [\n                {\n                    name: data.key,\n                    value: data.mainValue - (data.baseValue || 0)\n                }\n            ];\n        }\n        return settings.mainValues.map((main, i) => ({\n            name: main.name,\n            value: toValue(main.type, data.mainValues[i])\n        }));\n    }\n    return [\n        {\n            name: settings.mainValues[0].name,\n            value: toValue(settings.mainValues[0].type, data.colorValue || data.mainValue - data.baseValue || data.mainValue || data.mainValues)\n        }\n    ];\n}\n"],"file":"selectionData.js"}