{"version":3,"sources":["../../../../src/js/d3fc/axis/multi-axis.js"],"names":["select","line","axisOrdinalTop","axisOrdinalBottom","axisOrdinalLeft","axisOrdinalRight","dataJoin","rebindAll","exclude","store","multiAxis","orient","baseAxis","scale","tickSizeOuter","tickSizeInner","axisStore","decorate","groups","groupDataJoin","domainPathDataJoin","translate","x","y","isVertical","pathTranspose","arr","map","d","selection","transition","each","data","index","group","element","container","sign","range","domainPathData","domainLine","attr","g","getAxisSize","i","Array","isArray","getAxisOffset","sum","n","nodes","groupElement","groupScale","scaleFromGroup","useAxis","s","tickOffset","step","exit","customScale","value","values","domain","reduce","length","ticks","tickFormat","text","copy","tickSize","args","Number","multiAxisTop","multiAxisBottom","multiAxisLeft","multiAxisRight"],"mappings":"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","sourcesContent":["import {select, line} from \"d3\";\nimport {axisOrdinalTop, axisOrdinalBottom, axisOrdinalLeft, axisOrdinalRight, dataJoin, rebindAll, exclude} from \"d3fc\";\nimport store from \"./store\";\n\nconst multiAxis = (orient, baseAxis, scale) => {\n    let tickSizeOuter = 6;\n    let tickSizeInner = 6;\n    let axisStore = store(\"tickFormat\", \"ticks\", \"tickArguments\", \"tickValues\", \"tickPadding\");\n    let decorate = () => {};\n\n    let groups = null;\n\n    const groupDataJoin = dataJoin(\"g\", \"group\");\n    const domainPathDataJoin = dataJoin(\"path\", \"domain\");\n\n    const translate = (x, y) => (isVertical() ? `translate(${y}, ${x})` : `translate(${x}, ${y})`);\n\n    const pathTranspose = arr => (isVertical() ? arr.map(d => [d[1], d[0]]) : arr);\n\n    const isVertical = () => orient === \"left\" || orient === \"right\";\n\n    const multiAxis = selection => {\n        if (!groups) {\n            axisStore(baseAxis(scale).decorate(decorate))(selection);\n            return;\n        }\n\n        if (selection.selection) {\n            groupDataJoin.transition(selection);\n            domainPathDataJoin.transition(selection);\n        }\n\n        selection.each((data, index, group) => {\n            const element = group[index];\n\n            const container = select(element);\n\n            const sign = orient === \"bottom\" || orient === \"right\" ? 1 : -1;\n\n            // add the domain line\n            const range = scale.range();\n            const domainPathData = pathTranspose([\n                [range[0], sign * tickSizeOuter],\n                [range[0], 0],\n                [range[1], 0],\n                [range[1], sign * tickSizeOuter]\n            ]);\n\n            const domainLine = domainPathDataJoin(container, [data]);\n            domainLine\n                .attr(\"d\", line()(domainPathData))\n                .attr(\"stroke\", \"#000\")\n                .attr(\"fill\", \"none\");\n\n            const g = groupDataJoin(container, groups);\n\n            const getAxisSize = i => (Array.isArray(tickSizeInner) ? tickSizeInner[i] : tickSizeInner);\n            const getAxisOffset = i => {\n                let sum = 0;\n                for (let n = 0; n < i; n++) {\n                    sum += getAxisSize(n);\n                }\n                return sum;\n            };\n\n            g.attr(\"transform\", (d, i) => translate(0, sign * getAxisOffset(i))).each((group, i, nodes) => {\n                const groupElement = select(nodes[i]);\n                const groupScale = scaleFromGroup(scale, group);\n                const useAxis = axisStore(baseAxis(groupScale))\n                    .decorate((s, data) => decorate(s, data, i))\n                    .tickSizeInner(getAxisSize(i))\n                    .tickOffset(d => groupScale.step(d) / 2);\n                useAxis(groupElement);\n\n                groupElement.select(\"path.domain\").attr(\"visibility\", \"hidden\");\n            });\n\n            // exit\n            g.exit().attr(\"transform\", (d, i) => translate(0, sign * getAxisOffset(i)));\n        });\n    };\n\n    const scaleFromGroup = (scale, group) => {\n        function customScale(value) {\n            const values = value.domain;\n            return values.reduce((sum, d) => sum + scale(d), 0) / values.length;\n        }\n\n        customScale.ticks = () => {\n            return group;\n        };\n        customScale.tickFormat = () => d => {\n            return d.text;\n        };\n        customScale.copy = () => scaleFromGroup(scale, group);\n\n        customScale.step = value => value.domain.length * scale.step();\n\n        rebindAll(customScale, scale, exclude(\"ticks\", \"step\", \"copy\"));\n        return customScale;\n    };\n\n    multiAxis.tickSize = (...args) => {\n        if (!args.length) {\n            return tickSizeInner;\n        }\n        tickSizeInner = tickSizeOuter = Number(args[0]);\n        return multiAxis;\n    };\n\n    multiAxis.tickSizeInner = (...args) => {\n        if (!args.length) {\n            return tickSizeInner;\n        }\n        tickSizeInner = Array.isArray(args[0]) ? args[0] : Number(args[0]);\n        return multiAxis;\n    };\n\n    multiAxis.tickSizeOuter = (...args) => {\n        if (!args.length) {\n            return tickSizeOuter;\n        }\n        tickSizeOuter = Number(args[0]);\n        return multiAxis;\n    };\n\n    multiAxis.decorate = (...args) => {\n        if (!args.length) {\n            return decorate;\n        }\n        decorate = args[0];\n        return multiAxis;\n    };\n\n    multiAxis.groups = (...args) => {\n        if (!args.length) {\n            return groups;\n        }\n        groups = args[0];\n        return multiAxis;\n    };\n\n    rebindAll(multiAxis, axisStore);\n\n    return multiAxis;\n};\n\nexport const multiAxisTop = scale => multiAxis(\"top\", axisOrdinalTop, scale);\n\nexport const multiAxisBottom = scale => multiAxis(\"bottom\", axisOrdinalBottom, scale);\n\nexport const multiAxisLeft = scale => multiAxis(\"left\", axisOrdinalLeft, scale);\n\nexport const multiAxisRight = scale => multiAxis(\"right\", axisOrdinalRight, scale);\n"],"file":"multi-axis.js"}