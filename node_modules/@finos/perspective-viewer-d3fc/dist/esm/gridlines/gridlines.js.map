{"version":3,"sources":["../../../src/js/gridlines/gridlines.js"],"names":["fc","mainGridSvg","settings","x","style","colorStyles","grid","gridLineColor","mainGridCanvas","c","strokeStyle","lineWidth","crossGridSvg","crossGridCanvas","series","orient","canvas","xScale","yScale","context","seriesMulti","seriesSvgMulti","annotationGridline","annotationSvgGridline","mainGrid","crossGrid","_withGridLines","args","seriesCanvasMulti","annotationCanvasGridline","multi","xStyle","yStyle","gridlines","xDecorate","yDecorate","length"],"mappings":"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","sourcesContent":["/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\nimport * as fc from \"d3fc\";\n\nconst mainGridSvg = settings => x => x.style(\"stroke-width\", \"1.0\").style(\"stroke\", settings ? settings.colorStyles.grid.gridLineColor : \"#bbb\");\n\nconst mainGridCanvas = settings => c => {\n    c.strokeStyle = settings ? settings.colorStyles.grid.gridLineColor : \"#bbb\";\n    c.lineWidth = 1;\n};\n\nconst crossGridSvg = x => x.style(\"display\", \"none\");\nconst crossGridCanvas = settings => c => {\n    c.lineWidth = 1;\n    c.strokeStyle = settings ? settings.colorStyles.grid.gridLineColor : \"#bbb\";\n};\n\nexport default (series, settings) => {\n    let orient = \"both\";\n    let canvas = false;\n    let xScale = null;\n    let yScale = null;\n    let context = null;\n\n    let seriesMulti = fc.seriesSvgMulti();\n    let annotationGridline = fc.annotationSvgGridline();\n    let mainGrid = mainGridSvg(settings);\n    let crossGrid = crossGridSvg;\n\n    const _withGridLines = function(...args) {\n        if (canvas) {\n            seriesMulti = fc.seriesCanvasMulti().context(context);\n            annotationGridline = fc.annotationCanvasGridline();\n            mainGrid = mainGridCanvas(settings);\n            crossGrid = crossGridCanvas(settings);\n        }\n\n        const multi = seriesMulti.xScale(xScale).yScale(yScale);\n\n        const xStyle = orient === \"vertical\" ? crossGrid : mainGrid;\n        const yStyle = orient === \"horizontal\" ? crossGrid : mainGrid;\n\n        const gridlines = annotationGridline.xDecorate(xStyle).yDecorate(yStyle);\n\n        return multi.series([gridlines, series])(...args);\n    };\n\n    _withGridLines.orient = (...args) => {\n        if (!args.length) {\n            return orient;\n        }\n        orient = args[0];\n        return _withGridLines;\n    };\n\n    _withGridLines.canvas = (...args) => {\n        if (!args.length) {\n            return canvas;\n        }\n        canvas = args[0];\n        return _withGridLines;\n    };\n\n    _withGridLines.xScale = (...args) => {\n        if (!args.length) {\n            return xScale;\n        }\n        xScale = args[0];\n        return _withGridLines;\n    };\n\n    _withGridLines.yScale = (...args) => {\n        if (!args.length) {\n            return yScale;\n        }\n        yScale = args[0];\n        return _withGridLines;\n    };\n\n    _withGridLines.context = (...args) => {\n        if (!args.length) {\n            return context;\n        }\n        context = args[0];\n        return _withGridLines;\n    };\n\n    return _withGridLines;\n};\n"],"file":"gridlines.js"}