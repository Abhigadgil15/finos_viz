{"version":3,"sources":["../../../src/js/axis/linearAxis.js"],"names":["d3","fc","flattenArray","extentLinear","customExtent","valueformatter","scale","scaleLinear","domain","base","pad","padUnit","valueNames","_domain","data","accessors","map","v","d","parseFloat","getDataExtent","rebindAll","getMinimumGap","gaps","valueName","sort","a","b","filter","i","reduce","acc","src","Math","abs","min","dataWidth","args","length","labelFunction","tickFormatFunction"],"mappings":"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","sourcesContent":["/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\nimport * as d3 from \"d3\";\nimport * as fc from \"d3fc\";\nimport {flattenArray} from \"./flatten\";\nimport {extentLinear as customExtent} from \"../d3fc/extent/extentLinear\";\nimport valueformatter from \"./valueFormatter\";\n\nexport const scale = () => d3.scaleLinear();\n\nexport const domain = () => {\n    const base = customExtent()\n        .pad([0, 0.1])\n        .padUnit(\"percent\");\n\n    let valueNames = [\"crossValue\"];\n\n    const _domain = data => {\n        base.accessors(valueNames.map(v => d => parseFloat(d[v])));\n\n        return getDataExtent(flattenArray(data));\n    };\n\n    fc.rebindAll(_domain, base);\n\n    const getMinimumGap = data => {\n        const gaps = valueNames.map(valueName =>\n            data\n                .map(d => d[valueName])\n                .sort((a, b) => a - b)\n                .filter((d, i, a) => i === 0 || d !== a[i - 1])\n                .reduce((acc, d, i, src) => (i === 0 || acc <= d - src[i - 1] ? acc : Math.abs(d - src[i - 1])))\n        );\n\n        return Math.min(...gaps);\n    };\n\n    const getDataExtent = data => {\n        if (base.padUnit() == \"domain\") {\n            const dataWidth = getMinimumGap(data);\n            return base.pad([dataWidth / 2, dataWidth / 2])(data);\n        } else {\n            return base(data);\n        }\n    };\n\n    _domain.valueName = (...args) => {\n        if (!args.length) {\n            return valueNames[0];\n        }\n        valueNames = [args[0]];\n        return _domain;\n    };\n    _domain.valueNames = (...args) => {\n        if (!args.length) {\n            return valueNames;\n        }\n        valueNames = args[0];\n        return _domain;\n    };\n\n    return _domain;\n};\n\nexport const labelFunction = valueName => d => d[valueName][0];\n\nexport const tickFormatFunction = valueformatter;\n"],"file":"linearAxis.js"}