{"version":3,"sources":["../../../src/js/axis/axisFactory.js"],"names":["fc","axisType","none","linear","time","ordinal","axisTypes","axisFactory","settings","excludeType","orient","settingName","settingValue","valueNames","optionalParams","optional","_factory","data","useType","axis","domainFunction","domain","forEach","p","component","createComponent","defaultComponent","scale","labelFunction","bottom","left","top","right","size","decorate","label","map","v","name","join","tickFormatFunction","axisBottom","axisLeft","axisTop","axisRight","args","length","valueName"],"mappings":"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","sourcesContent":["/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\nimport * as fc from \"d3fc\";\nimport {axisType} from \"./axisType\";\nimport * as none from \"./noAxis\";\nimport * as linear from \"./linearAxis\";\nimport * as time from \"./timeAxis\";\nimport * as ordinal from \"./ordinalAxis\";\n\nconst axisTypes = {\n    none,\n    ordinal,\n    time,\n    linear\n};\n\nexport const axisFactory = settings => {\n    let excludeType = null;\n    let orient = \"horizontal\";\n    let settingName = \"crossValues\";\n    let settingValue = null;\n    let valueNames = [\"crossValue\"];\n\n    const optionalParams = [\"include\", \"paddingStrategy\", \"pad\"];\n    const optional = {};\n\n    const _factory = data => {\n        const useType = axisType(settings)\n            .excludeType(excludeType)\n            .settingName(settingName)\n            .settingValue(settingValue)();\n\n        const axis = axisTypes[useType];\n        const domainFunction = axis.domain().valueNames(valueNames);\n\n        optionalParams.forEach(p => {\n            if (optional[p] && domainFunction[p]) domainFunction[p](optional[p]);\n        });\n        if (domainFunction.orient) domainFunction.orient(orient);\n\n        const domain = domainFunction(data);\n        const component = axis.component ? createComponent(axis, domain, data) : defaultComponent();\n\n        return {\n            scale: axis.scale(),\n            domain,\n            domainFunction,\n            labelFunction: axis.labelFunction,\n            component: {\n                bottom: component.bottom,\n                left: component.left,\n                top: component.top,\n                right: component.right\n            },\n            size: component.size,\n            decorate: component.decorate,\n            label: settings[settingName].map(v => v.name).join(\", \"),\n            tickFormatFunction: axis.tickFormatFunction\n        };\n    };\n\n    const createComponent = (axis, domain, data) =>\n        axis\n            .component(settings)\n            .orient(orient)\n            .settingName(settingName)\n            .domain(domain)(data);\n\n    const defaultComponent = () => ({\n        bottom: fc.axisBottom,\n        left: fc.axisLeft,\n        top: fc.axisTop,\n        right: fc.axisRight,\n        decorate: () => {}\n    });\n\n    _factory.excludeType = (...args) => {\n        if (!args.length) {\n            return excludeType;\n        }\n        excludeType = args[0];\n        return _factory;\n    };\n\n    _factory.orient = (...args) => {\n        if (!args.length) {\n            return orient;\n        }\n        orient = args[0];\n        return _factory;\n    };\n\n    _factory.settingName = (...args) => {\n        if (!args.length) {\n            return settingName;\n        }\n        settingName = args[0];\n        return _factory;\n    };\n\n    _factory.settingValue = (...args) => {\n        if (!args.length) {\n            return settingValue;\n        }\n        settingValue = args[0];\n        return _factory;\n    };\n\n    _factory.valueName = (...args) => {\n        if (!args.length) {\n            return valueNames[0];\n        }\n        valueNames = [args[0]];\n        return _factory;\n    };\n\n    _factory.valueNames = (...args) => {\n        if (!args.length) {\n            return valueNames;\n        }\n        valueNames = args[0];\n        return _factory;\n    };\n\n    optionalParams.forEach(p => {\n        _factory[p] = (...args) => {\n            if (!args.length) {\n                return optional[p];\n            }\n            optional[p] = args[0];\n            return _factory;\n        };\n    });\n\n    return _factory;\n};\n"],"file":"axisFactory.js"}