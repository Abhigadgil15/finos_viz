{"version":3,"sources":["../../../src/js/axis/splitterLabels.js"],"names":["fc","getChartElement","withoutOpacity","splitterLabels","settings","labels","alt","color","_render","selection","text","labelDataJoin","dataJoin","key","d","disabled","length","coloured","splitValues","classed","name","style","undefined","on","splitMainValues","filter","v","concat","redrawChart","chartElement","node","remove","draw","args"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,KAAKA,EAAZ,MAAoB,MAApB;AACA,SAAQC,eAAR,QAA8B,gBAA9B;AACA,SAAQC,cAAR,QAA6B,2BAA7B,C,CAEA;AACA;;AACA,OAAO,MAAMC,cAAc,GAAGC,QAAQ,IAAI;AACtC,MAAIC,MAAM,GAAG,EAAb;AACA,MAAIC,GAAG,GAAG,KAAV;AACA,MAAIC,KAAJ;;AAEA,QAAMC,OAAO,GAAGC,SAAS,IAAI;AACzBA,IAAAA,SAAS,CAACC,IAAV,CAAe,EAAf;AAEA,UAAMC,aAAa,GAAGX,EAAE,CAACY,QAAH,CAAY,MAAZ,EAAoB,gBAApB,EAAsCC,GAAtC,CAA0CC,CAAC,IAAIA,CAA/C,CAAtB;AAEA,UAAMC,QAAQ,GAAG,CAACT,GAAD,IAAQD,MAAM,CAACW,MAAP,KAAkB,CAA3C;AACA,UAAMC,QAAQ,GAAGV,KAAK,IAAIH,QAAQ,CAACc,WAAT,CAAqBF,MAArB,KAAgC,CAA1D;AACAL,IAAAA,aAAa,CAACF,SAAD,EAAYJ,MAAZ,CAAb,CACKc,OADL,CACa,UADb,EACyBJ,QADzB,EAEKL,IAFL,CAEUI,CAAC,IAAIA,CAAC,CAACM,IAFjB,EAGKC,KAHL,CAGW,OAHX,EAGoBP,CAAC,IAAKG,QAAQ,GAAGf,cAAc,CAACK,KAAK,CAACO,CAAC,CAACM,IAAH,CAAN,CAAjB,GAAmCE,SAHrE,EAIKC,EAJL,CAIQ,OAJR,EAIiBT,CAAC,IAAI;AACd,UAAIC,QAAJ,EAAc;;AAEd,UAAIT,GAAJ,EAAS;AACLF,QAAAA,QAAQ,CAACoB,eAAT,GAA2BpB,QAAQ,CAACoB,eAAT,CAAyBC,MAAzB,CAAgCC,CAAC,IAAIA,CAAC,IAAIZ,CAAC,CAACM,IAA5C,CAA3B;AACH,OAFD,MAEO;AACHhB,QAAAA,QAAQ,CAACoB,eAAT,GAA2B,CAACV,CAAC,CAACM,IAAH,EAASO,MAAT,CAAgBvB,QAAQ,CAACoB,eAAT,IAA4B,EAA5C,CAA3B;AACH;;AAEDI,MAAAA,WAAW,CAACnB,SAAD,CAAX;AACH,KAdL;AAeH,GAtBD;;AAwBA,QAAMmB,WAAW,GAAGnB,SAAS,IAAI;AAC7B,UAAMoB,YAAY,GAAG5B,eAAe,CAACQ,SAAS,CAACqB,IAAV,EAAD,CAApC;AACAD,IAAAA,YAAY,CAACE,MAAb;AACAF,IAAAA,YAAY,CAACG,IAAb;AACH,GAJD;;AAMAxB,EAAAA,OAAO,CAACH,MAAR,GAAiB,CAAC,GAAG4B,IAAJ,KAAa;AAC1B,QAAI,CAACA,IAAI,CAACjB,MAAV,EAAkB;AACd,aAAOX,MAAP;AACH;;AACDA,IAAAA,MAAM,GAAG4B,IAAI,CAAC,CAAD,CAAb;AACA,WAAOzB,OAAP;AACH,GAND;;AAOAA,EAAAA,OAAO,CAACF,GAAR,GAAc,CAAC,GAAG2B,IAAJ,KAAa;AACvB,QAAI,CAACA,IAAI,CAACjB,MAAV,EAAkB;AACd,aAAOV,GAAP;AACH;;AACDA,IAAAA,GAAG,GAAG2B,IAAI,CAAC,CAAD,CAAV;AACA,WAAOzB,OAAP;AACH,GAND;;AAQAA,EAAAA,OAAO,CAACD,KAAR,GAAgB,CAAC,GAAG0B,IAAJ,KAAa;AACzB,QAAI,CAACA,IAAI,CAACjB,MAAV,EAAkB;AACd,aAAOT,KAAP;AACH;;AACDA,IAAAA,KAAK,GAAG0B,IAAI,CAAC,CAAD,CAAZ;AACA,WAAOzB,OAAP;AACH,GAND;;AAOA,SAAOA,OAAP;AACH,CA1DM","sourcesContent":["/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\nimport * as fc from \"d3fc\";\nimport {getChartElement} from \"../plugin/root\";\nimport {withoutOpacity} from \"../series/seriesColors.js\";\n\n// Render a set of labels with the little left/right arrows for moving\n// between axes\nexport const splitterLabels = settings => {\n    let labels = [];\n    let alt = false;\n    let color;\n\n    const _render = selection => {\n        selection.text(\"\");\n\n        const labelDataJoin = fc.dataJoin(\"span\", \"splitter-label\").key(d => d);\n\n        const disabled = !alt && labels.length === 1;\n        const coloured = color && settings.splitValues.length === 0;\n        labelDataJoin(selection, labels)\n            .classed(\"disabled\", disabled)\n            .text(d => d.name)\n            .style(\"color\", d => (coloured ? withoutOpacity(color(d.name)) : undefined))\n            .on(\"click\", d => {\n                if (disabled) return;\n\n                if (alt) {\n                    settings.splitMainValues = settings.splitMainValues.filter(v => v != d.name);\n                } else {\n                    settings.splitMainValues = [d.name].concat(settings.splitMainValues || []);\n                }\n\n                redrawChart(selection);\n            });\n    };\n\n    const redrawChart = selection => {\n        const chartElement = getChartElement(selection.node());\n        chartElement.remove();\n        chartElement.draw();\n    };\n\n    _render.labels = (...args) => {\n        if (!args.length) {\n            return labels;\n        }\n        labels = args[0];\n        return _render;\n    };\n    _render.alt = (...args) => {\n        if (!args.length) {\n            return alt;\n        }\n        alt = args[0];\n        return _render;\n    };\n\n    _render.color = (...args) => {\n        if (!args.length) {\n            return color;\n        }\n        color = args[0];\n        return _render;\n    };\n    return _render;\n};\n"],"file":"splitterLabels.js"}