{"version":3,"sources":["../../../src/js/legend/filter.js"],"names":["groupFromKey","filterData","settings","data","useData","hideKeys","length","map","col","clone","forEach","k","filterDataByGroup","Object","keys","key","includes"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,YAAR,QAA2B,qBAA3B;AAEA,OAAO,SAASC,UAAT,CAAoBC,QAApB,EAA8BC,IAA9B,EAAoC;AACvC,QAAMC,OAAO,GAAGD,IAAI,IAAID,QAAQ,CAACC,IAAjC;;AACA,MAAID,QAAQ,CAACG,QAAT,IAAqBH,QAAQ,CAACG,QAAT,CAAkBC,MAAlB,GAA2B,CAApD,EAAuD;AACnD,WAAOF,OAAO,CAACG,GAAR,CAAYC,GAAG,IAAI;AACtB,YAAMC,KAAK,GAAG,EAAC,GAAGD;AAAJ,OAAd;AACAN,MAAAA,QAAQ,CAACG,QAAT,CAAkBK,OAAlB,CAA0BC,CAAC,IAAI;AAC3B,eAAOF,KAAK,CAACE,CAAD,CAAZ;AACH,OAFD;AAGA,aAAOF,KAAP;AACH,KANM,CAAP;AAOH;;AACD,SAAOL,OAAP;AACH;AAED,OAAO,SAASQ,iBAAT,CAA2BV,QAA3B,EAAqCC,IAArC,EAA2C;AAC9C,QAAMC,OAAO,GAAGD,IAAI,IAAID,QAAQ,CAACC,IAAjC;;AACA,MAAID,QAAQ,CAACG,QAAT,IAAqBH,QAAQ,CAACG,QAAT,CAAkBC,MAAlB,GAA2B,CAApD,EAAuD;AACnD,WAAOF,OAAO,CAACG,GAAR,CAAYC,GAAG,IAAI;AACtB,YAAMC,KAAK,GAAG,EAAd;AACAI,MAAAA,MAAM,CAACC,IAAP,CAAYN,GAAZ,EAAiBD,GAAjB,CAAqBQ,GAAG,IAAI;AACxB,YAAI,CAACb,QAAQ,CAACG,QAAT,CAAkBW,QAAlB,CAA2BhB,YAAY,CAACe,GAAD,CAAvC,CAAL,EAAoD;AAChDN,UAAAA,KAAK,CAACM,GAAD,CAAL,GAAaP,GAAG,CAACO,GAAD,CAAhB;AACH;AACJ,OAJD;AAKA,aAAON,KAAP;AACH,KARM,CAAP;AASH;;AACD,SAAOL,OAAP;AACH","sourcesContent":["/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\nimport {groupFromKey} from \"../series/seriesKey\";\n\nexport function filterData(settings, data) {\n    const useData = data || settings.data;\n    if (settings.hideKeys && settings.hideKeys.length > 0) {\n        return useData.map(col => {\n            const clone = {...col};\n            settings.hideKeys.forEach(k => {\n                delete clone[k];\n            });\n            return clone;\n        });\n    }\n    return useData;\n}\n\nexport function filterDataByGroup(settings, data) {\n    const useData = data || settings.data;\n    if (settings.hideKeys && settings.hideKeys.length > 0) {\n        return useData.map(col => {\n            const clone = {};\n            Object.keys(col).map(key => {\n                if (!settings.hideKeys.includes(groupFromKey(key))) {\n                    clone[key] = col[key];\n                }\n            });\n            return clone;\n        });\n    }\n    return useData;\n}\n"],"file":"filter.js"}