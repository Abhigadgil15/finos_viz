{"version":3,"sources":["../../../src/js/series/barSeries.js"],"names":["fc","tooltip","barSeries","settings","color","series","mainValues","length","seriesSvgGrouped","seriesSvgBar","decorate","selection","style","d","key","autoBandwidth","minBandwidth","crossValue","mainValue","baseValue","adaptee","min","arg","rebindAll","bandwidth","args","Math","max"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,KAAKA,EAAZ,MAAoB,MAApB;AACA,SAAQC,OAAR,QAAsB,oBAAtB;AAEA,OAAO,SAASC,SAAT,CAAmBC,QAAnB,EAA6BC,KAA7B,EAAoC;AACvC,MAAIC,MAAM,GAAGF,QAAQ,CAACG,UAAT,CAAoBC,MAApB,GAA6B,CAA7B,GAAiCP,EAAE,CAACQ,gBAAH,CAAoBR,EAAE,CAACS,YAAH,EAApB,CAAjC,GAA0ET,EAAE,CAACS,YAAH,EAAvF;AAEAJ,EAAAA,MAAM,GAAGA,MAAM,CAACK,QAAP,CAAgBC,SAAS,IAAI;AAClCV,IAAAA,OAAO,GAAGE,QAAV,CAAmBA,QAAnB,EAA6BQ,SAA7B;AACAA,IAAAA,SAAS,CAACC,KAAV,CAAgB,MAAhB,EAAwBC,CAAC,IAAIT,KAAK,CAACS,CAAC,CAACC,GAAH,CAAlC;AACH,GAHQ,CAAT;AAKA,SAAOd,EAAE,CACJe,aADE,CACYC,YAAY,CAACX,MAAD,CADxB,EAEFY,UAFE,CAESJ,CAAC,IAAIA,CAAC,CAACI,UAFhB,EAGFC,SAHE,CAGQL,CAAC,IAAIA,CAAC,CAACK,SAHf,EAIFC,SAJE,CAIQN,CAAC,IAAIA,CAAC,CAACM,SAJf,CAAP;AAKH;;AAED,MAAMH,YAAY,GAAGI,OAAO,IAAI;AAC5B,QAAMC,GAAG,GAAGC,GAAG,IAAI;AACf,WAAOF,OAAO,CAACE,GAAD,CAAd;AACH,GAFD;;AAIAtB,EAAAA,EAAE,CAACuB,SAAH,CAAaF,GAAb,EAAkBD,OAAlB;;AAEAC,EAAAA,GAAG,CAACG,SAAJ,GAAgB,CAAC,GAAGC,IAAJ,KAAa;AACzB,QAAI,CAACA,IAAI,CAAClB,MAAV,EAAkB;AACd,aAAOa,OAAO,CAACI,SAAR,EAAP;AACH;;AACDJ,IAAAA,OAAO,CAACI,SAAR,CAAkBE,IAAI,CAACC,GAAL,CAASF,IAAI,CAAC,CAAD,CAAb,EAAkB,CAAlB,CAAlB;AACA,WAAOJ,GAAP;AACH,GAND;;AAQA,SAAOA,GAAP;AACH,CAhBD","sourcesContent":["/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\nimport * as fc from \"d3fc\";\nimport {tooltip} from \"../tooltip/tooltip\";\n\nexport function barSeries(settings, color) {\n    let series = settings.mainValues.length > 1 ? fc.seriesSvgGrouped(fc.seriesSvgBar()) : fc.seriesSvgBar();\n\n    series = series.decorate(selection => {\n        tooltip().settings(settings)(selection);\n        selection.style(\"fill\", d => color(d.key));\n    });\n\n    return fc\n        .autoBandwidth(minBandwidth(series))\n        .crossValue(d => d.crossValue)\n        .mainValue(d => d.mainValue)\n        .baseValue(d => d.baseValue);\n}\n\nconst minBandwidth = adaptee => {\n    const min = arg => {\n        return adaptee(arg);\n    };\n\n    fc.rebindAll(min, adaptee);\n\n    min.bandwidth = (...args) => {\n        if (!args.length) {\n            return adaptee.bandwidth();\n        }\n        adaptee.bandwidth(Math.max(args[0], 1));\n        return min;\n    };\n\n    return min;\n};\n"],"file":"barSeries.js"}