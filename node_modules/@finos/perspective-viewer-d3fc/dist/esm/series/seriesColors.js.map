{"version":3,"sources":["../../../src/js/series/seriesColors.js"],"names":["d3","groupFromKey","seriesColors","settings","col","data","length","domain","Object","keys","filter","k","colorScale","seriesColorsFromDistinct","Array","from","Set","seriesColorsFromGroups","forEach","key","group","includes","push","defaultColors","mapFunction","d","withOpacity","colorStyles","opacity","colors","styles","defaults","series","range","scheme","scaleOrdinal","map","args","withoutOpacity","color","setOpacity","decoded"],"mappings":"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","sourcesContent":["/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\nimport * as d3 from \"d3\";\nimport {groupFromKey} from \"./seriesKey\";\n\nexport function seriesColors(settings) {\n    const col = settings.data && settings.data.length > 0 ? settings.data[0] : {};\n    const domain = Object.keys(col).filter(k => k !== \"__ROW_PATH__\");\n    return colorScale()\n        .settings(settings)\n        .domain(domain)();\n}\n\nexport function seriesColorsFromDistinct(settings, data) {\n    let domain = Array.from(new Set(data));\n    return colorScale()\n        .settings(settings)\n        .domain(domain)();\n}\n\nexport function seriesColorsFromGroups(settings) {\n    const col = settings.data && settings.data.length > 0 ? settings.data[0] : {};\n    const domain = [];\n    Object.keys(col).forEach(key => {\n        if (key !== \"__ROW_PATH__\") {\n            const group = groupFromKey(key);\n            if (!domain.includes(group)) {\n                domain.push(group);\n            }\n        }\n    });\n    return colorScale()\n        .settings(settings)\n        .domain(domain)();\n}\n\nexport function colorScale() {\n    let domain = null;\n    let defaultColors = null;\n    let settings = {};\n    let mapFunction = d => withOpacity(d, settings.colorStyles && settings.colorStyles.opacity);\n\n    const colors = () => {\n        const styles = settings.colorStyles;\n        const defaults = defaultColors || [styles.series];\n        if (defaults || domain.length > 1) {\n            const range = domain.length > 1 ? styles.scheme : defaults;\n            return d3.scaleOrdinal(range.map(mapFunction)).domain(domain);\n        }\n        return null;\n    };\n\n    colors.domain = (...args) => {\n        if (!args.length) {\n            return domain;\n        }\n        domain = args[0];\n        return colors;\n    };\n\n    colors.defaultColors = (...args) => {\n        if (!args.length) {\n            return defaultColors;\n        }\n        defaultColors = args[0];\n        return colors;\n    };\n\n    colors.mapFunction = (...args) => {\n        if (!args.length) {\n            return mapFunction;\n        }\n        mapFunction = args[0];\n        return colors;\n    };\n\n    colors.settings = (...args) => {\n        if (!args.length) {\n            return settings;\n        }\n        settings = args[0];\n        return colors;\n    };\n\n    return colors;\n}\n\nexport function withoutOpacity(color) {\n    return setOpacity(1)(color);\n}\n\nexport function withOpacity(color, opacity = 0.5) {\n    return setOpacity(opacity)(color);\n}\n\nexport function setOpacity(opacity) {\n    return color => {\n        const decoded = d3.color(color);\n        decoded.opacity = opacity;\n        return decoded + \"\";\n    };\n}\n"],"file":"seriesColors.js"}