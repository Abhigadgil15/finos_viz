{"version":3,"sources":["../../../src/js/series/colorStyles.js"],"names":["d3","gparser","initialiseStyles","container","settings","colorStyles","data","n","push","styles","scheme","gradient","interpolator","grid","computed","computedStyle","forEach","d","i","opacity","getOpacityFromColor","series","gridLineColor","gradients","g","parseGradient","color","stepAsColor","value","window","ShadyCSS","getComputedStyleValue","containerStyles","getComputedStyle","getPropertyValue","parsed","parse","colorStops","map","length","sort","a","b"],"mappings":"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","sourcesContent":["/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nimport * as d3 from \"d3\";\nimport * as gparser from \"gradient-parser\";\n\nexport const initialiseStyles = (container, settings) => {\n    if (!settings.colorStyles) {\n        const data = [\"series\"];\n        for (let n = 1; n <= 10; n++) {\n            data.push(`series-${n}`);\n        }\n\n        const styles = {\n            scheme: [],\n            gradient: {},\n            interpolator: {},\n            grid: {}\n        };\n\n        const computed = computedStyle(container);\n        data.forEach((d, i) => {\n            styles[d] = computed(`--d3fc-${d}`);\n\n            if (i > 0) {\n                styles.scheme.push(styles[d]);\n            }\n        });\n\n        styles.opacity = getOpacityFromColor(styles.series);\n        styles.grid.gridLineColor = computed`--d3fc-gridline--color`;\n\n        const gradients = [\"full\", \"positive\", \"negative\"];\n        gradients.forEach(g => {\n            const gradient = computed(`--d3fc-${g}--gradient`);\n            styles.gradient[g] = parseGradient(gradient, styles.opacity);\n        });\n\n        settings.colorStyles = styles;\n    }\n};\n\nconst getOpacityFromColor = color => {\n    return d3.color(color).opacity;\n};\n\nconst stepAsColor = (value, opacity) => {\n    const color = d3.color(`#${value}`);\n    color.opacity = opacity;\n    return color + \"\";\n};\n\nconst computedStyle = container => {\n    if (window.ShadyCSS) {\n        return d => window.ShadyCSS.getComputedStyleValue(container, d);\n    } else {\n        const containerStyles = getComputedStyle(container);\n        return d => containerStyles.getPropertyValue(d);\n    }\n};\n\nconst parseGradient = (gradient, opacity) => {\n    const parsed = gparser.parse(gradient)[0].colorStops;\n    return parsed.map((g, i) => [g.length ? g.length.value / 100 : i / (parsed.length - 1), stepAsColor(g.value, opacity)]).sort((a, b) => a[0] - b[0]);\n};\n"],"file":"colorStyles.js"}