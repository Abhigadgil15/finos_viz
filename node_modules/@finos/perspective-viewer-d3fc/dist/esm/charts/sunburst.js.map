{"version":3,"sources":["../../../src/js/charts/sunburst.js"],"names":["select","treeColor","treeData","sunburstSeries","tooltip","gridLayoutMultiChart","colorRangeLegend","colorLegend","sunburst","container","settings","crossValues","length","console","warn","data","color","sunburstGrid","elementsPrefix","datum","call","color_column","realValues","mainValues","find","x","name","type","legend","scale","sunburstContainer","chartContainer","sunburstEnter","chartEnter","sunburstDiv","chartDiv","sunburstTitle","chartTitle","containerSize","each","d","i","nodes","text","split","append","attr","merge","width","height","sunburstElement","svgNode","parentNode","getBoundingClientRect","radius","Math","min","selectAll","plugin","max_cells","max_columns","render_warning","initial","count","names"],"mappings":"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","sourcesContent":["/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nimport {select} from \"d3\";\nimport {treeColor} from \"../series/sunburst/sunburstColor\";\nimport {treeData} from \"../data/treeData\";\nimport {sunburstSeries} from \"../series/sunburst/sunburstSeries\";\nimport {tooltip} from \"../tooltip/tooltip\";\nimport {gridLayoutMultiChart} from \"../layout/gridLayoutMultiChart\";\nimport {colorRangeLegend} from \"../legend/colorRangeLegend\";\nimport {colorLegend} from \"../legend/legend\";\n\nfunction sunburst(container, settings) {\n    if (settings.crossValues.length === 0) {\n        console.warn(\"Unable to render a chart in the absence of any groups.\");\n        return;\n    }\n\n    const data = treeData(settings);\n    const color = treeColor(settings, data);\n    const sunburstGrid = gridLayoutMultiChart().elementsPrefix(\"sunburst\");\n\n    container.datum(data).call(sunburstGrid);\n\n    if (color) {\n        const color_column = settings.realValues[1];\n        if (settings.mainValues.find(x => x.name === color_column)?.type === \"string\") {\n            const legend = colorLegend()\n                .settings(settings)\n                .scale(color);\n            container.call(legend);\n        } else {\n            const legend = colorRangeLegend().scale(color);\n            container.call(legend);\n        }\n    }\n\n    const sunburstContainer = sunburstGrid.chartContainer();\n    const sunburstEnter = sunburstGrid.chartEnter();\n    const sunburstDiv = sunburstGrid.chartDiv();\n    const sunburstTitle = sunburstGrid.chartTitle();\n    const containerSize = sunburstGrid.containerSize();\n\n    sunburstTitle.each((d, i, nodes) => select(nodes[i]).text(d.split));\n\n    sunburstContainer\n        .append(\"circle\")\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\");\n\n    sunburstContainer.append(\"text\").attr(\"class\", \"parent\");\n    sunburstEnter\n        .merge(sunburstDiv)\n        .select(\"svg\")\n        .select(\"g.sunburst\")\n        .attr(\"transform\", `translate(${containerSize.width / 2}, ${containerSize.height / 2})`)\n        .each(function({split, data}) {\n            const sunburstElement = select(this);\n            const svgNode = this.parentNode;\n            const {width, height} = svgNode.getBoundingClientRect();\n\n            const radius = (Math.min(width, height) - 24) / (settings.crossValues.length * 2);\n            sunburstSeries()\n                .settings(settings)\n                .split(split)\n                .data(data)\n                .color(color)\n                .radius(radius)(sunburstElement);\n\n            tooltip().settings(settings)(sunburstElement.selectAll(\"g.segment\"));\n        });\n}\n\nsunburst.plugin = {\n    type: \"d3_sunburst\",\n    name: \"Sunburst\",\n    max_cells: 7500,\n    max_columns: 50,\n    render_warning: true,\n    initial: {\n        type: \"number\",\n        count: 1,\n        names: [\"Size\", \"Color\", \"Tooltip\"]\n    }\n};\n\nexport default sunburst;\n"],"file":"sunburst.js"}