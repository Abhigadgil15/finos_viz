{"version":3,"sources":["../../../src/js/charts/bar.js"],"names":["fc","axisFactory","chartSvgFactory","AXIS_TYPES","barSeries","seriesColors","groupAndStackData","colorLegend","filterData","withGridLines","hardLimitZeroPadding","zoomableChart","barChart","container","settings","data","color","legend","scale","bars","orient","series","seriesSvgMulti","mapping","index","map","xAxis","settingName","valueName","excludeType","ordinal","include","paddingStrategy","yAxis","linear","chart","plotArea","yPaddingInner","yPaddingOuter","align","xNice","zoomChart","yScale","datum","call","plugin","type","name","max_cells","max_columns","render_warning"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,KAAKA,EAAZ,MAAoB,MAApB;AACA,SAAQC,WAAR,QAA0B,qBAA1B;AACA,SAAQC,eAAR,QAA8B,sBAA9B;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,SAAQC,SAAR,QAAwB,qBAAxB;AACA,SAAQC,YAAR,QAA2B,wBAA3B;AACA,SAAQC,iBAAR,QAAgC,mBAAhC;AACA,SAAQC,WAAR,QAA0B,kBAA1B;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AAEA,SAAQC,oBAAR,QAAmC,+BAAnC;AACA,OAAOC,aAAP,MAA0B,uBAA1B;;AAEA,SAASC,QAAT,CAAkBC,SAAlB,EAA6BC,QAA7B,EAAuC;AACnC,QAAMC,IAAI,GAAGT,iBAAiB,CAACQ,QAAD,EAAWN,UAAU,CAACM,QAAD,CAArB,CAA9B;AACA,QAAME,KAAK,GAAGX,YAAY,CAACS,QAAD,CAA1B;AAEA,QAAMG,MAAM,GAAGV,WAAW,GACrBO,QADU,CACDA,QADC,EAEVI,KAFU,CAEJF,KAFI,CAAf;AAIA,QAAMG,IAAI,GAAGf,SAAS,CAACU,QAAD,EAAWE,KAAX,CAAT,CAA2BI,MAA3B,CAAkC,YAAlC,CAAb;AACA,QAAMC,MAAM,GAAGrB,EAAE,CACZsB,cADU,GAEVC,OAFU,CAEF,CAACR,IAAD,EAAOS,KAAP,KAAiBT,IAAI,CAACS,KAAD,CAFnB,EAGVH,MAHU,CAGHN,IAAI,CAACU,GAAL,CAAS,MAAMN,IAAf,CAHG,CAAf;AAKA,QAAMO,KAAK,GAAGzB,WAAW,CAACa,QAAD,CAAX,CACTa,WADS,CACG,YADH,EAETC,SAFS,CAEC,WAFD,EAGTC,WAHS,CAGG1B,UAAU,CAAC2B,OAHd,EAITC,OAJS,CAID,CAAC,CAAD,CAJC,EAKTC,eALS,CAKOtB,oBAAoB,EAL3B,EAK+BK,IAL/B,CAAd;AAMA,QAAMkB,KAAK,GAAGhC,WAAW,CAACa,QAAD,CAAX,CACTe,WADS,CACG1B,UAAU,CAAC+B,MADd,EAETP,WAFS,CAEG,aAFH,EAGTC,SAHS,CAGC,YAHD,EAITR,MAJS,CAIF,UAJE,EAIUL,IAJV,CAAd;AAMA,QAAMoB,KAAK,GAAGjC,eAAe,CAACwB,KAAD,EAAQO,KAAR,CAAf,CAA8BG,QAA9B,CAAuC3B,aAAa,CAACY,MAAD,EAASP,QAAT,CAAb,CAAgCM,MAAhC,CAAuC,YAAvC,CAAvC,CAAd;;AAEA,MAAIe,KAAK,CAACE,aAAV,EAAyB;AACrBF,IAAAA,KAAK,CAACE,aAAN,CAAoB,GAApB;AACAF,IAAAA,KAAK,CAACG,aAAN,CAAoB,IAApB;AACAnB,IAAAA,IAAI,CAACoB,KAAL,CAAW,MAAX;AACH;;AACDJ,EAAAA,KAAK,CAACK,KAAN,IAAeL,KAAK,CAACK,KAAN,EAAf;AAEA,QAAMC,SAAS,GAAG9B,aAAa,GAC1BwB,KADa,CACPA,KADO,EAEbrB,QAFa,CAEJA,QAFI,EAGb4B,MAHa,CAGNT,KAAK,CAACf,KAHA,CAAlB,CAnCmC,CAwCnC;;AACAL,EAAAA,SAAS,CAAC8B,KAAV,CAAgB5B,IAAhB,EAAsB6B,IAAtB,CAA2BH,SAA3B;AACA5B,EAAAA,SAAS,CAAC+B,IAAV,CAAe3B,MAAf;AACH;;AACDL,QAAQ,CAACiC,MAAT,GAAkB;AACdC,EAAAA,IAAI,EAAE,UADQ;AAEdC,EAAAA,IAAI,EAAE,aAFQ;AAGdC,EAAAA,SAAS,EAAE,IAHG;AAIdC,EAAAA,WAAW,EAAE,EAJC;AAKdC,EAAAA,cAAc,EAAE;AALF,CAAlB;AAQA,eAAetC,QAAf","sourcesContent":["/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\nimport * as fc from \"d3fc\";\nimport {axisFactory} from \"../axis/axisFactory\";\nimport {chartSvgFactory} from \"../axis/chartFactory\";\nimport {AXIS_TYPES} from \"../axis/axisType\";\nimport {barSeries} from \"../series/barSeries\";\nimport {seriesColors} from \"../series/seriesColors\";\nimport {groupAndStackData} from \"../data/groupData\";\nimport {colorLegend} from \"../legend/legend\";\nimport {filterData} from \"../legend/filter\";\nimport withGridLines from \"../gridlines/gridlines\";\n\nimport {hardLimitZeroPadding} from \"../d3fc/padding/hardLimitZero\";\nimport zoomableChart from \"../zoom/zoomableChart\";\n\nfunction barChart(container, settings) {\n    const data = groupAndStackData(settings, filterData(settings));\n    const color = seriesColors(settings);\n\n    const legend = colorLegend()\n        .settings(settings)\n        .scale(color);\n\n    const bars = barSeries(settings, color).orient(\"horizontal\");\n    const series = fc\n        .seriesSvgMulti()\n        .mapping((data, index) => data[index])\n        .series(data.map(() => bars));\n\n    const xAxis = axisFactory(settings)\n        .settingName(\"mainValues\")\n        .valueName(\"mainValue\")\n        .excludeType(AXIS_TYPES.ordinal)\n        .include([0])\n        .paddingStrategy(hardLimitZeroPadding())(data);\n    const yAxis = axisFactory(settings)\n        .excludeType(AXIS_TYPES.linear)\n        .settingName(\"crossValues\")\n        .valueName(\"crossValue\")\n        .orient(\"vertical\")(data);\n\n    const chart = chartSvgFactory(xAxis, yAxis).plotArea(withGridLines(series, settings).orient(\"horizontal\"));\n\n    if (chart.yPaddingInner) {\n        chart.yPaddingInner(0.5);\n        chart.yPaddingOuter(0.25);\n        bars.align(\"left\");\n    }\n    chart.xNice && chart.xNice();\n\n    const zoomChart = zoomableChart()\n        .chart(chart)\n        .settings(settings)\n        .yScale(yAxis.scale);\n\n    // render\n    container.datum(data).call(zoomChart);\n    container.call(legend);\n}\nbarChart.plugin = {\n    type: \"d3_x_bar\",\n    name: \"X Bar Chart\",\n    max_cells: 1000,\n    max_columns: 50,\n    render_warning: true\n};\n\nexport default barChart;\n"],"file":"bar.js"}