{"version":3,"sources":["../../../src/js/charts/column.js"],"names":["fc","axisFactory","chartSvgFactory","domainMatchOrigins","axisSplitter","dataBlankFunction","groupedBlankFunction","AXIS_TYPES","barSeries","seriesColors","groupAndStackData","colorLegend","filterData","withGridLines","hardLimitZeroPadding","zoomableChart","columnChart","container","settings","data","color","legend","scale","bars","orient","series","seriesSvgMulti","mapping","index","map","xAxis","excludeType","linear","settingName","valueName","yAxisFactory","ordinal","include","paddingStrategy","blankFunction","mainValues","length","splitter","yAxis1","plotSeries","haveSplit","chart","plotArea","xPaddingInner","xPaddingOuter","align","yNice","zoomChart","xScale","yAxis2","altData","domain","yDomain","altAxis","datum","call","plugin","type","name","max_cells","max_columns","render_warning"],"mappings":"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","sourcesContent":["/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\nimport * as fc from \"d3fc\";\nimport {axisFactory} from \"../axis/axisFactory\";\nimport {chartSvgFactory} from \"../axis/chartFactory\";\nimport domainMatchOrigins from \"../axis/domainMatchOrigins\";\nimport {axisSplitter, dataBlankFunction, groupedBlankFunction} from \"../axis/axisSplitter\";\nimport {AXIS_TYPES} from \"../axis/axisType\";\nimport {barSeries} from \"../series/barSeries\";\nimport {seriesColors} from \"../series/seriesColors\";\nimport {groupAndStackData} from \"../data/groupData\";\nimport {colorLegend} from \"../legend/legend\";\nimport {filterData} from \"../legend/filter\";\nimport withGridLines from \"../gridlines/gridlines\";\nimport {hardLimitZeroPadding} from \"../d3fc/padding/hardLimitZero\";\nimport zoomableChart from \"../zoom/zoomableChart\";\n\nfunction columnChart(container, settings) {\n    const data = groupAndStackData(settings, filterData(settings));\n    const color = seriesColors(settings);\n\n    const legend = colorLegend()\n        .settings(settings)\n        .scale(color);\n\n    const bars = barSeries(settings, color).orient(\"vertical\");\n    const series = fc\n        .seriesSvgMulti()\n        .mapping((data, index) => data[index])\n        .series(data.map(() => bars));\n\n    const xAxis = axisFactory(settings)\n        .excludeType(AXIS_TYPES.linear)\n        .settingName(\"crossValues\")\n        .valueName(\"crossValue\")(data);\n    const yAxisFactory = axisFactory(settings)\n        .settingName(\"mainValues\")\n        .valueName(\"mainValue\")\n        .excludeType(AXIS_TYPES.ordinal)\n        .orient(\"vertical\")\n        .include([0])\n        .paddingStrategy(hardLimitZeroPadding());\n\n    // Check whether we've split some values into a second y-axis\n    const blankFunction = settings.mainValues.length > 1 ? groupedBlankFunction : dataBlankFunction;\n    const splitter = axisSplitter(settings, data, blankFunction).color(color);\n\n    const yAxis1 = yAxisFactory(splitter.data());\n\n    // No grid lines if splitting y-axis\n    const plotSeries = splitter.haveSplit() ? series : withGridLines(series, settings).orient(\"vertical\");\n\n    const chart = chartSvgFactory(xAxis, yAxis1)\n        .axisSplitter(splitter)\n        .plotArea(plotSeries);\n\n    if (chart.xPaddingInner) {\n        chart.xPaddingInner(0.5);\n        chart.xPaddingOuter(0.25);\n        bars.align(\"left\");\n    }\n    chart.yNice && chart.yNice();\n\n    const zoomChart = zoomableChart()\n        .chart(chart)\n        .settings(settings)\n        .xScale(xAxis.scale);\n\n    if (splitter.haveSplit()) {\n        // Create the y-axis data for the alt-axis\n        const yAxis2 = yAxisFactory(splitter.altData());\n\n        domainMatchOrigins(yAxis1.domain, yAxis2.domain);\n        chart.yDomain(yAxis1.domain).altAxis(yAxis2);\n    }\n\n    // render\n    container.datum(splitter.data()).call(zoomChart);\n    container.call(legend);\n}\ncolumnChart.plugin = {\n    type: \"d3_y_bar\",\n    name: \"Y Bar Chart\",\n    max_cells: 1000,\n    max_columns: 50,\n    render_warning: true\n};\n\nexport default columnChart;\n"],"file":"column.js"}