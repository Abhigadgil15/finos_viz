{"version":3,"sources":["../../src/js/perspective.parallel.js"],"names":["defaults","get_config","Client","WebSocketClient","require","override_config","wasm_worker","wasm","INLINE_WARNING","override","worker","ArrayBuffer","console","warn","_wasm","req","fetch","arrayBuffer","WebWorkerClient","constructor","config","register","_worker","msg","cmd","WebAssembly","Error","buffer","Promise","all","key","addEventListener","_handle","bind","postMessage","_detect_transferable","send","transferable","args","terminate","undefined","ab","byteLength","debug","WORKER_SINGLETON","__WORKER__","__CONFIG__","getInstance","config_str","JSON","stringify","document","currentScript","hasAttribute","mod","x","set","websocket","url","window","location","origin","replace","WebSocket","shared_worker","prop","Object","keys"],"mappings":"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","sourcesContent":["/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nimport * as defaults from \"./config/constants.js\";\nimport {get_config} from \"./config\";\nimport {Client} from \"./api/client.js\";\nconst {WebSocketClient} = require(\"./websocket/client\");\n\nimport {override_config} from \"../../dist/esm/config/index.js\";\n\nimport wasm_worker from \"./perspective.worker.js\";\nimport wasm from \"./@finos/perspective-cpp/dist/esm/perspective.cpp.wasm\";\n\n// eslint-disable-next-line max-len\nconst INLINE_WARNING = `Perspective has been compiled in INLINE mode.  While \\\nPerspective's runtime performance is not affected, you may see smaller assets \\\nsize and faster engine initial load time using \"file-loader\" to build your\napplication.\nhttps://perspective.finos.org/docs/md/js.html`;\n\n/**\n * Singleton WASM file download cache.\n */\nconst override = new (class {\n    worker() {\n        return wasm_worker();\n    }\n\n    async wasm() {\n        if (wasm instanceof ArrayBuffer) {\n            console.warn(INLINE_WARNING);\n            this._wasm = wasm;\n        } else {\n            const req = await fetch(wasm);\n            this._wasm = await req.arrayBuffer();\n        }\n        return this._wasm;\n    }\n})();\n\n/**\n * WebWorker extends Perspective's `worker` class and defines interactions using\n * the WebWorker API.\n *\n * This class serves as the client API for transporting messages to/from Web\n * Workers.\n */\nclass WebWorkerClient extends Client {\n    constructor(config) {\n        if (config) {\n            override_config(config);\n        }\n        super();\n        this.register();\n    }\n\n    /**\n     * When the worker is created, load either the ASM or WASM bundle depending\n     * on WebAssembly compatibility.  Don't use transferrable so multiple\n     * workers can be instantiated.\n     */\n    async register() {\n        let _worker;\n        const msg = {cmd: \"init\", config: get_config()};\n        if (typeof WebAssembly === \"undefined\") {\n            throw new Error(\"WebAssembly not supported. Support for ASM.JS has been removed as of 0.3.1.\");\n        } else {\n            [_worker, msg.buffer] = await Promise.all([override.worker(), override.wasm()]);\n        }\n        for (var key in this._worker) {\n            _worker[key] = this._worker[key];\n        }\n        this._worker = _worker;\n        this._worker.addEventListener(\"message\", this._handle.bind(this));\n        this._worker.postMessage(msg);\n        this._detect_transferable();\n    }\n\n    /**\n     * Send a message from the worker, using transferables if necessary.\n     *\n     * @param {*} msg\n     */\n    send(msg) {\n        if (this._worker.transferable && msg.args && msg.args[0] instanceof ArrayBuffer) {\n            this._worker.postMessage(msg, [msg.args[0]]);\n        } else {\n            this._worker.postMessage(msg);\n        }\n    }\n\n    terminate() {\n        this._worker.terminate();\n        this._worker = undefined;\n    }\n\n    _detect_transferable() {\n        var ab = new ArrayBuffer(1);\n        this._worker.postMessage(ab, [ab]);\n        this._worker.transferable = ab.byteLength === 0;\n        if (!this._worker.transferable) {\n            console.warn(\"Transferable support not detected\");\n        } else {\n            console.debug(\"Transferable support detected\");\n        }\n    }\n}\n\n/******************************************************************************\n *\n * Web Worker Singleton\n *\n */\n\nconst WORKER_SINGLETON = (function() {\n    let __WORKER__, __CONFIG__;\n    return {\n        getInstance: function(config) {\n            if (__WORKER__ === undefined) {\n                __WORKER__ = new WebWorkerClient(config);\n            }\n            const config_str = JSON.stringify(config);\n            if (__CONFIG__ && config_str !== __CONFIG__) {\n                throw new Error(`Confiuration object for shared_worker() has changed - this is probably a bug in your application.`);\n            }\n            __CONFIG__ = config_str;\n            return __WORKER__;\n        }\n    };\n})();\n\n/**\n * If Perspective is loaded with the `preload` attribute, pre-initialize the\n * worker so it is available at page render.\n */\nif (document.currentScript && document.currentScript.hasAttribute(\"preload\")) {\n    WORKER_SINGLETON.getInstance();\n}\n\nconst mod = {\n    override: x => override.set(x),\n\n    /**\n     * Create a new WebWorkerClient instance. s\n     * @param {*} [config] An optional perspective config object override\n     */\n    worker(config) {\n        return new WebWorkerClient(config);\n    },\n\n    /**\n     * Create a new WebSocketClient instance. The `url` parameter is provided,\n     * load the worker at `url` using a WebSocket. s\n     * @param {*} url Defaults to `window.location.origin`\n     * @param {*} [config] An optional perspective config object override\n     */\n    websocket(url = window.location.origin.replace(\"http\", \"ws\")) {\n        return new WebSocketClient(new WebSocket(url));\n    },\n\n    shared_worker(config) {\n        return WORKER_SINGLETON.getInstance(config);\n    }\n};\n\nfor (let prop of Object.keys(defaults)) {\n    mod[prop] = defaults[prop];\n}\n\nexport default mod;\n"],"file":"perspective.parallel.js"}