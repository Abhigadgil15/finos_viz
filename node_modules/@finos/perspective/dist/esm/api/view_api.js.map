{"version":3,"sources":["../../../src/js/api/view_api.js"],"names":["subscribe","unsubscribe","async_queue","view","worker","table_name","config","Promise","resolve","reject","_worker","_name","Math","random","post","cmd","view_name","_initialized","_features","wait_for_response","proxy_view","name","prototype","get_config","get_min_max","to_json","to_arrow","to_columns","to_csv","schema","expression_schema","column_paths","num_columns","num_rows","set_depth","get_row_expanded","expand","collapse","delete","col_to_js_typed_array","on_update","remove_update","on_delete","remove_delete"],"mappings":"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","sourcesContent":["/******************************************************************************\n *\n * Copyright (c) 2019, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nimport {subscribe, unsubscribe, async_queue} from \"./dispatch.js\";\n\n/**\n * Construct a proxy for the view object by creating a \"view\" message and\n * sending it through the worker.\n *\n * @param {*} worker\n * @param {*} table_name\n * @param {*} config\n */\nexport function view(worker, table_name, config) {\n    return new Promise((resolve, reject) => {\n        this._worker = worker;\n        this._name = Math.random() + \"\";\n\n        this._worker.post(\n            {\n                cmd: \"view\",\n                view_name: this._name,\n                table_name: table_name,\n                config: config\n            },\n            () => {\n                // Resolve the Promise with this function, which is a proxy\n                // view that dispatches all view methods to the backend, i.e.\n                // a Web Worker or a Python/Node Perspective server. Because\n                // arrow functions automatically capture `this` from the\n                // surrounding scope, there is no need to explicitly bind the\n                // resolving value to `this`.\n                resolve(this);\n            },\n            reject\n        );\n\n        if (this._worker._initialized === true && !this._worker._features?.wait_for_response) {\n            resolve(this);\n        }\n    });\n}\n\n/**\n * Create a reference to a view located on `worker` for use by remote clients.\n *\n * @param {worker} worker the Web Worker at which the view is located.\n * @param {String} name a unique name for the view.\n */\nexport function proxy_view(worker, name) {\n    this._worker = worker;\n    this._name = name;\n}\n\nproxy_view.prototype = view.prototype;\n\n// Send view methods that do not create new objects (getters, setters etc.) to\n// the queue for processing.\n\nview.prototype.get_config = async_queue(\"get_config\");\n\nview.prototype.get_min_max = async_queue(\"get_min_max\");\n\nview.prototype.to_json = async_queue(\"to_json\");\n\nview.prototype.to_arrow = async_queue(\"to_arrow\");\n\nview.prototype.to_columns = async_queue(\"to_columns\");\n\nview.prototype.to_csv = async_queue(\"to_csv\");\n\nview.prototype.schema = async_queue(\"schema\");\n\nview.prototype.expression_schema = async_queue(\"expression_schema\");\n\nview.prototype.column_paths = async_queue(\"column_paths\");\n\nview.prototype.num_columns = async_queue(\"num_columns\");\n\nview.prototype.num_rows = async_queue(\"num_rows\");\n\nview.prototype.set_depth = async_queue(\"set_depth\");\n\nview.prototype.get_row_expanded = async_queue(\"get_row_expanded\");\n\nview.prototype.expand = async_queue(\"expand\");\n\nview.prototype.collapse = async_queue(\"collapse\");\n\nview.prototype.delete = async_queue(\"delete\");\n\nview.prototype.col_to_js_typed_array = async_queue(\"col_to_js_typed_array\");\n\nview.prototype.on_update = subscribe(\"on_update\", \"view_method\", true);\n\nview.prototype.remove_update = unsubscribe(\"remove_update\", \"view_method\", true);\n\nview.prototype.on_delete = subscribe(\"on_delete\", \"view_method\", true);\n\nview.prototype.remove_delete = unsubscribe(\"remove_delete\", \"view_method\", true);\n"],"file":"view_api.js"}