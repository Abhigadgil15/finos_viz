{"version":3,"sources":["../../../src/js/api/client.js"],"names":["table","proxy_table","bindall","Client","constructor","_initialized","_worker","initialized","value","transferable","msg_id","handlers","messages","unsubscribe","cmd","handler","key","Object","keys","resolve","post","msg","reject","keep_alive","id","send","push","_features","wait_for_response","memory_usage","Promise","initialize_profile_thread","Error","open_table","name","_handle","e","document","window","undefined","event","createEvent","initEvent","dispatchEvent","msgs","data","feature","m","hasOwnProperty","error","options","terminate"],"mappings":"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","sourcesContent":["/******************************************************************************\n *\n * Copyright (c) 2019, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nimport {table, proxy_table} from \"./table_api.js\";\nimport {bindall} from \"../utils.js\";\n\n/**\n * Perspective's worker API handles and processes asynchronous messages,\n * interfacing with the Perspective host class.  Child classes must implement\n * the `send()` interface, which defines how messages are dispatched in\n * different contexts.  `handlers` is a dictionary of resolve/reject callbacks\n * for each method the worker receives.\n *\n * @export\n */\nexport class Client {\n    constructor() {\n        this._initialized = false;\n        this._worker = {\n            initialized: {value: false},\n            transferable: false,\n            msg_id: 0,\n            handlers: {},\n            messages: []\n        };\n        bindall(this);\n    }\n\n    /**\n     * Remove a listener for a Perspective-generated event.\n     */\n    unsubscribe(cmd, handler) {\n        for (let key of Object.keys(this._worker.handlers)) {\n            if (this._worker.handlers[key].resolve === handler) {\n                delete this._worker.handlers[key];\n            }\n        }\n    }\n\n    /**\n     * Send a message to the server.\n     */\n    post(msg, resolve, reject, keep_alive = false) {\n        ++this._worker.msg_id;\n        if (resolve || reject) {\n            this._worker.handlers[this._worker.msg_id] = {resolve, reject, keep_alive};\n        }\n        msg.id = this._worker.msg_id;\n        if (this._worker.initialized.value) {\n            this.send(msg);\n        } else {\n            this._worker.messages.push(() => {\n                this.send(msg);\n\n                if ((msg.cmd === \"table\" || msg.cmd === \"view\") && !this._features?.wait_for_response && resolve) {\n                    resolve();\n                }\n            });\n        }\n    }\n\n    /**\n     * Snapshots memory usage from the WebWorker or Node.js process, with the\n     * addition of `wasmHeap` Emscripten's linear memory\n     * @async\n     * @returns {MemoryUsage}\n     */\n    async memory_usage() {\n        return await new Promise((resolve, reject) => {\n            this.post({cmd: \"memory_usage\"}, resolve, reject);\n        });\n    }\n\n    initialize_profile_thread() {\n        if (this._worker.initialized.value) {\n            this.send({id: -1, cmd: \"init_profile_thread\"});\n        } else {\n            this._worker.messages.push(() => this.send({id: -1, cmd: \"init_profile_thread\"}));\n        }\n    }\n\n    /**\n     * Must be implemented in order to transport commands to the server.\n     */\n    send() {\n        throw new Error(\"send() not implemented\");\n    }\n\n    /**\n     * Given the name of a table that is hosted on the server (e.g. using\n     * `perspective-python` or `perspective` in NodeJS), return a `table`\n     * instance that sends all operations and instructions to the `table` on the\n     * server.\n     *\n     * @param {string} name\n     */\n    open_table(name) {\n        return new proxy_table(this, name);\n    }\n\n    /**\n     * Receive a message from the server, and resolve/reject the promise that\n     * is awaiting the content of the message.\n     */\n    _handle(e) {\n        if (!this._worker.initialized.value) {\n            if (!this._initialized && typeof document !== \"undefined\" && document && typeof window !== undefined && window) {\n                try {\n                    const event = document.createEvent(\"Event\");\n                    event.initEvent(\"perspective-ready\", false, true);\n                    window.dispatchEvent(event);\n                } catch (e) {}\n                this._initialized = true;\n            }\n\n            const msgs = this._worker.messages;\n            this._worker.initialized.value = true;\n            this._worker.messages = [];\n\n            // If the `data` attribute of the init message is set, then\n            // set the `features` dictionary with the flags from the server.\n            if (e.data?.data) {\n                this._features = {};\n\n                for (const feature of e.data.data) {\n                    this._features[feature] = true;\n                }\n            }\n\n            if (msgs) {\n                for (const m in msgs) {\n                    if (msgs.hasOwnProperty(m)) {\n                        msgs[m]();\n                    }\n                }\n            }\n        }\n\n        if (e.data.id) {\n            const handler = this._worker.handlers[e.data.id];\n\n            if (handler) {\n                if (e.data.error) {\n                    handler.reject(e.data.error);\n                } else {\n                    handler.resolve(e.data.data);\n                }\n\n                if (!handler.keep_alive) {\n                    delete this._worker.handlers[e.data.id];\n                }\n            }\n        }\n    }\n\n    table(data, options) {\n        return new table(this, data, options || {});\n    }\n\n    terminate() {\n        this._worker.terminate();\n        this._worker = undefined;\n    }\n}\n"],"file":"client.js"}